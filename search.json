[{"path":"http://www.schlosslab.org/mpactR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 mpactR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"load-required-libraries","dir":"Articles","previous_headings":"","what":"Load required libraries","title":"Downstream Analyses","text":"using multiple libraries data analysis visualization, can loaded . packages listed, can install install.packages(\"packagename\").","code":"library(mpactR) # devtools::load_all() library(viridis) library(plotly) library(data.table) library(tidyverse) library(Hmisc) library(corrplot) library(ggdendro) library(ggtext)"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"filter-ms1-feature-table-with-mpactr","dir":"Articles","previous_headings":"","what":"Filter ms1 feature table with mpactR","title":"Downstream Analyses","text":"using example data mpactR package, 24 samples 8 biological groups. Biological groups : JC1, Media, JC28, ANGDT, ANG18, Coculture, Mixed_Monoculture, Solvent_Blank. check feature table mispicked ions, remove solvent blank media blanks features abundance > 0.01, relative groups, check ions replicability. Overall, 423 ions remain feature table. summary filtering, tree map :","code":"data <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" ) data_filtered <- data |>   filter_mispicked_ions(merge_peaks = TRUE, merge_method = \"sum\") |>   filter_group(group_to_remove = \"Solvent_Blank\") |>   filter_group(group_to_remove = \"Media\") |>   filter_cv(cv_threshold = 0.2, cv_param = \"median\") #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain. #> ℹ Parsing 1261 peaks based on the following sample group: Solvent_Blank. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Solvent_Blank. #> ✔ 25 ions failed the Solvent_Blank filter, 1236 ions remain. #> ℹ Parsing 1236 peaks based on the following sample group: Media. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Media. #> ✔ 751 ions failed the Media filter, 485 ions remain. #> ℹ Parsing 485 peaks for replicability across technical replicates. #> ✔ 62 ions failed the cv_filter filter, 423 ions remain. plot_qc_tree(data_filtered)"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"interactive-scatter-plot-of-all-input-ions-an-their-fate-during-filtering","dir":"Articles","previous_headings":"","what":"Interactive scatter plot of all input ions an their fate during filtering","title":"Downstream Analyses","text":"Visualizing compound m/z retention time, fate filtering may useful see filters removing features certain retention time m/z ranges. create plot, first need extract raw data table, pre-filtered ions (including m/z retention time). can mpactR function get_raw_data(), select Compound, mz, rt columns. Next, need extract ion status mpactR function qc_summary(). function returns data.table reporting ion status input ion. includes filter ion failed, passing, ion passed applied filters. can join two data.tables plotting data set: Now can create scatter plot show input features (m/z ~ retention time) fate (status) using ggolot geom_point.  can also make plot interactive plotly pacakge function ggplotly.","code":"get_raw_data(data_filtered) %>%   select(Compound, mz, rt) %>%   head() #>    Compound       mz        rt #>       <num>    <num>     <num> #> 1:        1 256.0883 0.7748333 #> 2:        2 484.2921 0.7756667 #> 3:        3 445.2276 0.7786667 #> 4:        4 354.1842 0.7786667 #> 5:        5 353.1995 0.7816667 #> 6:        6 448.2945 0.7846667 qc_summary(data_filtered) %>%   head() #>    status compounds #>    <char>     <num> #> 1: Passed         7 #> 2: Passed        12 #> 3: Passed        13 #> 4: Passed        14 #> 5: Passed        19 #> 6: Passed        20 get_raw_data(data_filtered) %>%   select(Compound, mz, rt) %>%   left_join(qc_summary(data_filtered),     by = join_by(\"Compound\" == \"compounds\")   ) %>%   head() #>    Compound       mz        rt      status #>       <num>    <num>     <num>      <char> #> 1:        1 256.0883 0.7748333 group-Media #> 2:        2 484.2921 0.7756667 group-Media #> 3:        3 445.2276 0.7786667 group-Media #> 4:        4 354.1842 0.7786667 group-Media #> 5:        5 353.1995 0.7816667 group-Media #> 6:        6 448.2945 0.7846667 group-Media get_raw_data(data_filtered) %>%   select(Compound, mz, rt) %>%   left_join(qc_summary(data_filtered),     by = join_by(\"Compound\" == \"compounds\")   ) %>%   ggplot() +   aes(x = rt, y = mz, color = status) +   geom_point() +   viridis::scale_color_viridis(discrete = TRUE) +   labs(     x = \"Retention time (min)\",     y = \"m/z\",     color = \"Ion Status\"   ) +   theme_bw() +   theme(legend.position = \"top\") feature_plot <- get_raw_data(data_filtered) %>%   select(Compound, mz, rt) %>%   left_join(qc_summary(data_filtered),     by = join_by(\"Compound\" == \"compounds\")   ) %>%   ggplot() +   aes(     x = rt, y = mz, color = status,     text = paste0(\"Compound: \", Compound)   ) +   geom_point() +   viridis::scale_color_viridis(discrete = TRUE) +   labs(     x = \"Retention time (min)\",     y = \"m/z\",     color = \"Ion Status\"   ) +   theme_bw() +   theme(legend.position = \"top\")  ggplotly(feature_plot)"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"correlation-between-samples-at-different-levels","dir":"Articles","previous_headings":"","what":"Correlation between samples at different levels","title":"Downstream Analyses","text":"may interested individual samples, biological group sample correlate . analysis, need extract filtered feature table mpactR function get_peak_table(). function return filtered data.table rows features columns either compound metadata intensity values samples.","code":"ft <- get_peak_table(data_filtered)  ft[1:5, 1:7] #> Key: <Compound, mz, kmd, rt> #>    Compound       mz     kmd        rt 102423_Blank_77_1_5095 #>       <num>    <num>   <num>     <num>                  <num> #> 1:        7 674.3098 0.30975 0.7858333                      0 #> 2:       12 554.2919 0.29188 0.8020000                      0 #> 3:       13 363.1466 0.14658 0.8066667                      0 #> 4:       14 391.1776 0.17760 0.8080000                      0 #> 5:       19 415.0825 0.08247 0.8170000                      0 #>    102423_Blank_77_2_5096 102423_Blank_77_3_5097 #>                     <num>                  <num> #> 1:                      0                      0 #> 2:                      0                      0 #> 3:                      0                      0 #> 4:                      0                      0 #> 5:                      0                      0"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"correlation-between-each-individual-samples","dir":"Articles","previous_headings":"Correlation between samples at different levels","what":"Correlation between each individual samples","title":"Downstream Analyses","text":"First, can look correlation individual sample, regadless technical replicates biological groups. show well technical biological replicates correlate, expecting see near perfect correlation replicates. use Hmisc::rcorr() perform spearman correlations. function expecting matrix rows samples correlate rows features. Since feature table columns feature metadata samples, need remove feature metadata rcorr(). can extracting sample names metadata Injection column, match sample column names feature table. also need remove samples longer features post-filtering (likely solvent blanks). Next can run correlation: counts_cor object list data correlations. correlation coefficients stored r slot, p-values p slot. can see correlations first sample Finally, can plot correlations map corrplot. Style options can customized liking (see corrplot).","code":"counts <- ft %>%   select(Compound, all_of(get_meta_data(data_filtered)$Injection)) %>%   column_to_rownames(var = \"Compound\") %>%   select(where(~ sum(.x) != 0))  counts[1:5, 1:2] #>    102623_UM1848B_JC1_69_1_5004 102623_UM1846B_Media_67_1_5005 #> 7                          0.00                              0 #> 12                       370.98                              0 #> 13                      4541.06                              0 #> 14                         0.00                              0 #> 19                         0.00                              0 counts_cor <- rcorr(as.matrix(counts), type = \"spearman\") counts_cor$r[, 1] #>       102623_UM1848B_JC1_69_1_5004     102623_UM1846B_Media_67_1_5005  #>                         1.00000000                         0.17541589  #>      102623_UM1847B_JC28_68_1_5006     102623_UM1850B_ANGDT_71_1_5007  #>                        -0.40190441                        -0.46544728  #>     102623_UM1849B_ANG18_70_1_5008 102623_UM1852B_Coculture_72_1_5009  #>                        -0.03971590                        -0.66162852  #>  102623_MixedMonoculture_84_1_5015       102623_UM1848B_JC1_69_1_5017  #>                         0.26791815                         0.98020218  #>     102623_UM1846B_Media_67_1_5018      102623_UM1847B_JC28_68_1_5019  #>                         0.17402775                        -0.40305906  #>     102623_UM1850B_ANGDT_71_1_5020     102623_UM1849B_ANG18_70_1_5021  #>                        -0.46660263                        -0.03989960  #> 102623_UM1852B_Coculture_72_1_5022  102623_MixedMonoculture_84_1_5028  #>                        -0.65976408                         0.26407704  #>       102623_UM1848B_JC1_69_1_5030     102623_UM1846B_Media_67_1_5031  #>                         0.97770847                         0.17541193  #>      102623_UM1847B_JC28_68_1_5032     102623_UM1850B_ANGDT_71_1_5033  #>                        -0.40190659                        -0.46138695  #>     102623_UM1849B_ANG18_70_1_5034 102623_UM1852B_Coculture_72_1_5035  #>                        -0.01196953                        -0.66541048  #>  102623_MixedMonoculture_84_1_5041  #>                         0.25869973 corrplot(counts_cor$r,   type = \"lower\",   method = \"square\",   order = \"hclust\",   col = COL2(\"BrBG\", 10),   tl.col = \"black\",   tl.cex = .5 )"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"correlation-between-technical-replicates","dir":"Articles","previous_headings":"Correlation between samples at different levels","what":"Correlation between technical replicates","title":"Downstream Analyses","text":"Next, can look correlation technical replicates see compare across dataset. , calculate average intensity compound across technical replicates run correlation manner shown . original counts table, set row names column Compound, holds compound id. need reset Compound column pivot data table calculating averages. Next, join sample meta data can cacluate averages Sample_Code. Now can calculate mean intensity Compound Sample_Code. Finally, need reformat table columns sample codes correlation. Run correlation: finally visualize:","code":"meta <- get_meta_data(data_filtered)  counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   head() #> # A tibble: 6 × 3 #>   Compound Injection                          Intensity #>   <chr>    <chr>                                  <dbl> #> 1 7        102623_UM1848B_JC1_69_1_5004              0  #> 2 7        102623_UM1846B_Media_67_1_5005            0  #> 3 7        102623_UM1847B_JC28_68_1_5006          9537. #> 4 7        102623_UM1850B_ANGDT_71_1_5007        46175. #> 5 7        102623_UM1849B_ANG18_70_1_5008            0  #> 6 7        102623_UM1852B_Coculture_72_1_5009    29241. counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   head() #> # A tibble: 6 × 6 #>   Compound Injection             Intensity Sample_Code Biological_Group dilution #>   <chr>    <chr>                     <dbl> <chr>       <chr>               <dbl> #> 1 7        102623_UM1848B_JC1_6…        0  UM1848B     JC1                     1 #> 2 7        102623_UM1846B_Media…        0  UM1846B     Media                   1 #> 3 7        102623_UM1847B_JC28_…     9537. UM1847B     JC28                    1 #> 4 7        102623_UM1850B_ANGDT…    46175. UM1850B     ANGDT                   1 #> 5 7        102623_UM1849B_ANG18…        0  UM1849B     ANG18                   1 #> 6 7        102623_UM1852B_Cocul…    29241. UM1852B     Coculture               1 counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   summarise(     mean_intensity = mean(Intensity),     .by = c(Compound, Sample_Code)   ) %>%   head() #> # A tibble: 6 × 3 #>   Compound Sample_Code mean_intensity #>   <chr>    <chr>                <dbl> #> 1 7        UM1848B                 0  #> 2 7        UM1846B                 0  #> 3 7        UM1847B              9728. #> 4 7        UM1850B             44957. #> 5 7        UM1849B                 0  #> 6 7        UM1852B             28075. sample_counts <- counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   summarise(     mean_intensity = mean(Intensity),     .by = c(Compound, Sample_Code)   ) %>%   pivot_wider(     names_from = Sample_Code,     values_from = mean_intensity   ) %>%   column_to_rownames(var = \"Compound\")  sample_counts[1:5, 1:5] #>    UM1848B UM1846B  UM1847B   UM1850B UM1849B #> 7     0.00       0 9728.027 44956.797       0 #> 12  255.84       0 6483.557  5781.353       0 #> 13 5139.80       0    0.000     0.000       0 #> 14    0.00       0 5852.210  7934.937       0 #> 19    0.00       0 2518.980  2533.120       0 sample_counts_cor <- rcorr(as.matrix(sample_counts), type = \"spearman\") corrplot(sample_counts_cor$r,   type = \"lower\",   method = \"square\",   order = \"alphabet\",   col = COL2(\"BrBG\", 10),   tl.col = \"black\" )"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"correlation-between-biological-replicates","dir":"Articles","previous_headings":"Correlation between samples at different levels","what":"Correlation between biological replicates","title":"Downstream Analyses","text":"can also look correlation biological groups. dataset, technical replicates biological groups , however multiple technical replicates may also interested correlation biological groups. calculate mean intensity values Biological_Group manner Sample_Code. Run correlation analysis rorr(): Visualize correlation:  expected, biological group correlation matrix matches tehcnical replicates correlation.","code":"group_counts <- counts %>%   rownames_to_column(var = \"Compound\") %>%   pivot_longer(     cols = starts_with(\"102623\"),     names_to = \"Injection\",     values_to = \"Intensity\"   ) %>%   left_join(meta, by = \"Injection\") %>%   summarise(     mean_intensity = mean(Intensity),     .by = c(Compound, Biological_Group)   ) %>%   pivot_wider(     names_from = Biological_Group,     values_from = mean_intensity   ) %>%   column_to_rownames(var = \"Compound\") group_counts_cor <- rcorr(as.matrix(group_counts), type = \"spearman\") corrplot(group_counts_cor$r,   type = \"lower\",   method = \"square\",   order = \"alphabet\",   col = COL2(\"BrBG\", 10),   tl.col = \"black\" )"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"dendrogram","dir":"Articles","previous_headings":"","what":"Dendrogram","title":"Downstream Analyses","text":"may interested visualizing similar samples dendrogram. need calculate distance samples stats::dist(), cluster hclust(), visualize ggplot ggdendro packages. First, calculate distance cluster: Calculate dendrogram compoents stats::.dendrogram(): Extract plotting elements ggdendrogram::dendro_data() Use ggplot ggdendrogram plot dendrogram. customizations, see ggdendro documentation.","code":"dist <- stats::dist(t(counts), method = \"euclidian\") cluster <- stats::hclust(dist, method = \"complete\") dendro <- as.dendrogram(cluster) den_data <- dendro_data(dendro, type = \"rectangle\") ggplot(segment(den_data)) +   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +   geom_text(     data = den_data$labels,     aes(x = x, y = y, label = label),     size = 3,     hjust = \"outward\"   ) +   coord_cartesian(ylim = c((min(segment(den_data)$y) + 10), (max(segment(den_data)$y)))) +   coord_flip() +   scale_y_reverse(expand = c(.5, 0)) +   theme_dendro() #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"fold-change-analysis","dir":"Articles","previous_headings":"","what":"Fold change analysis","title":"Downstream Analyses","text":"Say wanted compare metabolite profiles Coculture ANG18 groups. can extract group means filtered compounds using mpactR function get_group_averages(), isolate groups interest, Coculture ANG18 monocoluture, calculate compound fold change.","code":""},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"calculate-fold-change","dir":"Articles","previous_headings":"Fold change analysis","what":"Calculate fold change","title":"Downstream Analyses","text":"Inherently, tandem MS/MS datasets can filled many zeros. instances coumpound found experimental group control group, vice versa. cases, fold change calculation yields infinite number zero either numerator denominator (foldchage=experimental/controlfold chage = experimental / control). also chance compound found either group, yielding fold change NaN (0/0). Compounds either group interest comparison can therefore removed analysis. mutliple ways handle compounds found one group . set upper lower bounds. First, extract group averages mpactr object select two groups interest. interested columns Coculture ANG18: calculate fold change, need two columns: one control group, ANG18, one experimental group, Coculture: Now can remove compounds intensity 0 groups: Next, calculate fold change remaining compounds: Now correct bounds: compounds 0 intenisty control group set fold change 100, 0 intensity experimental group set fold change 0.01. Finally, transform fold change log2:","code":"get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(fc = Coculture / ANG18) %>%   head() #> # A tibble: 6 × 4 #>   Compound ANG18 Coculture    fc #>      <dbl> <dbl>     <dbl> <dbl> #> 1        7     0    28075.   Inf #> 2       12     0     5926.   Inf #> 3       13     0        0    NaN #> 4       14     0    15264.   Inf #> 5       19     0     5338.   Inf #> 6       20     0     9443.   Inf get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0 & ANG18 == 0, FALSE, TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(fc = Coculture / ANG18) %>%   head() #> # A tibble: 6 × 5 #>   Compound ANG18 Coculture nonzero_compound    fc #>      <dbl> <dbl>     <dbl> <lgl>            <dbl> #> 1        7     0    28075. TRUE               Inf #> 2       12     0     5926. TRUE               Inf #> 3       14     0    15264. TRUE               Inf #> 4       19     0     5338. TRUE               Inf #> 5       20     0     9443. TRUE               Inf #> 6       22     0     5625. TRUE               Inf get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   head() #>    Compound Biological_Group   average #>       <num>           <char>     <num> #> 1:        7            ANG18     0.000 #> 2:        7        Coculture 28075.237 #> 3:       12            ANG18     0.000 #> 4:       12        Coculture  5926.327 #> 5:       13            ANG18     0.000 #> 6:       13        Coculture     0.000 get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   head() #> # A tibble: 6 × 3 #>   Compound ANG18 Coculture #>      <dbl> <dbl>     <dbl> #> 1        7     0    28075. #> 2       12     0     5926. #> 3       13     0        0  #> 4       14     0    15264. #> 5       19     0     5338. #> 6       20     0     9443. get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0 & ANG18 == 0, FALSE, TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   head() #> # A tibble: 6 × 4 #>   Compound ANG18 Coculture nonzero_compound #>      <dbl> <dbl>     <dbl> <lgl>            #> 1        7     0    28075. TRUE             #> 2       12     0     5926. TRUE             #> 3       14     0    15264. TRUE             #> 4       19     0     5338. TRUE             #> 5       20     0     9443. TRUE             #> 6       22     0     5625. TRUE get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0 & ANG18 == 0, FALSE, TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(fc = Coculture / ANG18) %>%   head() #> # A tibble: 6 × 5 #>   Compound ANG18 Coculture nonzero_compound    fc #>      <dbl> <dbl>     <dbl> <lgl>            <dbl> #> 1        7     0    28075. TRUE               Inf #> 2       12     0     5926. TRUE               Inf #> 3       14     0    15264. TRUE               Inf #> 4       19     0     5338. TRUE               Inf #> 5       20     0     9443. TRUE               Inf #> 6       22     0     5625. TRUE               Inf get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0 & ANG18 == 0, FALSE, TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(     fc = Coculture / ANG18,     fc = case_when(fc >= 100 ~ 100,       fc <= 0.01 ~ 0.01,       .default = fc     )   ) %>%   head() #> # A tibble: 6 × 5 #>   Compound ANG18 Coculture nonzero_compound    fc #>      <dbl> <dbl>     <dbl> <lgl>            <dbl> #> 1        7     0    28075. TRUE               100 #> 2       12     0     5926. TRUE               100 #> 3       14     0    15264. TRUE               100 #> 4       19     0     5338. TRUE               100 #> 5       20     0     9443. TRUE               100 #> 6       22     0     5625. TRUE               100 foldchanges <- get_group_averages(data_filtered) %>%   filter(Biological_Group == \"Coculture\" |     Biological_Group == \"ANG18\") %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(nonzero_compound = if_else(Coculture == 0 & ANG18 == 0, FALSE, TRUE)) %>%   filter(nonzero_compound == TRUE) %>%   mutate(     fc = Coculture / ANG18,     fc = case_when(fc >= 100 ~ 100,       fc <= 0.01 ~ 0.01,       .default = fc     ),     logfc = log2(fc)   )  head(foldchanges) #> # A tibble: 6 × 6 #>   Compound ANG18 Coculture nonzero_compound    fc logfc #>      <dbl> <dbl>     <dbl> <lgl>            <dbl> <dbl> #> 1        7     0    28075. TRUE               100  6.64 #> 2       12     0     5926. TRUE               100  6.64 #> 3       14     0    15264. TRUE               100  6.64 #> 4       19     0     5338. TRUE               100  6.64 #> 5       20     0     9443. TRUE               100  6.64 #> 6       22     0     5625. TRUE               100  6.64"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"visualize-fold-change-for-compounds-in-a-3d-scatter-plot","dir":"Articles","previous_headings":"Fold change analysis","what":"Visualize fold change for compounds in a 3D scatter plot","title":"Downstream Analyses","text":"can probe compounds plotting 3D scatter plot log2 fold changes function m/z retention time:","code":"fc_plotting <- foldchanges %>%   left_join(select(ft, Compound, mz, rt), by = \"Compound\")  plot_ly(fc_plotting,   x = ~logfc, y = ~rt, z = ~mz,   marker = list(color = ~logfc, showscale = TRUE) ) %>%   add_markers() %>%   layout(     scene = list(       xaxis = list(title = \"log2 Fold Change\"),       yaxis = list(title = \"Retention Time (min)\"),       zaxis = list(title = \"m/z\")     ),     annotations = list(       x = 1.13,       y = 1.05,       text = \"log2 Fold Change\",       xref = \"paper\",       yref = \"paper\",       showarrow = FALSE     )   )"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"test-for-compounds-with-significant-fold-changes","dir":"Articles","previous_headings":"Fold change analysis","what":"Test for compounds with significant fold changes","title":"Downstream Analyses","text":"t-tests, already calculated variation compounds within biological groups well within techincal replicates biological groups. can calculate t statisic degrees freedom use t distribution (pt()) calculate p-value. combine biological technical variaition calcualte sample size calculate t statitstic calculate degrees freedom calculate p-value combine t-test results fold changes calculated","code":"# Satterwaite calc_samplesize_ws <- function(sd1, n1, sd2, n2) {   s1 <- sd1 / (n1^0.5)   s2 <- sd2 / (n2^0.5)    n <- (s1^2 / n1 + s2^2 / n2)^2   d1 <- s1^4 / ((n1^2) * (n1 - 1))   d2 <- s2^4 / ((n2^2) * (n2 - 1))    d1[which(!is.finite(d1))] <- 0   d2[which(!is.finite(d2))] <- 0    d <- d1 + d2    return(n / d) }  my_comp <- c(\"Coculture\", \"ANG18\")  stats <- get_group_averages(data_filtered) %>%   mutate(     combRSD = sqrt(techRSD^2 + BiolRSD^2),     combASD = combRSD * average,     combASD = if_else(is.na(combASD), 0, combASD),     BiolRSD = if_else(is.na(BiolRSD), 0, BiolRSD),     techRSD = if_else(is.na(techRSD), 0, techRSD),     neff = calc_samplesize_ws(techRSD, techn, BiolRSD, Bioln) + 1   ) %>%   filter(Biological_Group %in% my_comp)  head(stats) #>    Compound Biological_Group   average    BiolRSD Bioln    techRSD techn #>       <num>           <char>     <num>      <num> <int>      <num> <num> #> 1:        7            ANG18     0.000 0.00000000     3 0.00000000     3 #> 2:        7        Coculture 28075.237 0.04421270     3 0.04421270     3 #> 3:       12            ANG18     0.000 0.00000000     3 0.00000000     3 #> 4:       12        Coculture  5926.327 0.01409696     3 0.01409696     3 #> 5:       13            ANG18     0.000 0.00000000     3 0.00000000     3 #> 6:       13        Coculture     0.000 0.00000000     3 0.00000000     3 #>       combRSD   combASD  neff #>         <num>     <num> <num> #> 1:         NA    0.0000   NaN #> 2: 0.06252619 1755.4377     5 #> 3:         NA    0.0000   NaN #> 4: 0.01993611  118.1479     5 #> 5:         NA    0.0000   NaN #> 6:         NA    0.0000   NaN denom <- stats %>%   summarise(den = combASD^2 / (neff), .by = c(\"Compound\", \"Biological_Group\")) %>%   mutate(den = if_else(!is.finite(den), 0, den)) %>%   summarise(denom = sqrt(sum(den)), .by = c(\"Compound\"))  t_test <- stats %>%   select(Compound, Biological_Group, average) %>%   pivot_wider(names_from = Biological_Group, values_from = average) %>%   mutate(numerator = (Coculture - ANG18)) %>% # experimental - control   left_join(denom, by = \"Compound\") %>%   mutate(t = abs(numerator / denom))  head(t_test) #> # A tibble: 6 × 6 #>   Compound ANG18 Coculture numerator denom     t #>      <dbl> <dbl>     <dbl>     <dbl> <dbl> <dbl> #> 1        7     0    28075.    28075. 785.   35.8 #> 2       12     0     5926.     5926.  52.8 112.  #> 3       13     0        0         0    0   NaN   #> 4       14     0    15264.    15264. 391.   39.0 #> 5       19     0     5338.     5338. 347.   15.4 #> 6       20     0     9443.     9443. 647.   14.6 df <- stats %>%   select(Compound, Biological_Group, neff) %>%   mutate(neff = if_else(!is.finite(neff), 0, neff)) %>%   pivot_wider(names_from = Biological_Group, values_from = neff) %>%   mutate(deg = Coculture + ANG18 - 2) %>%   select(Compound, deg)  head(df) #> # A tibble: 6 × 2 #>   Compound   deg #>      <dbl> <dbl> #> 1        7     3 #> 2       12     3 #> 3       13    -2 #> 4       14     3 #> 5       19     3 #> 6       20     3 t <- t_test %>%   left_join(df, by = \"Compound\") %>%   mutate(     p = (1 - pt(t, deg)) * 2,     logp = log10(p),     neg_logp = -logp   ) %>%   select(Compound, t, deg, p, logp, neg_logp)  head(t) #> # A tibble: 6 × 6 #>   Compound     t   deg            p   logp neg_logp #>      <dbl> <dbl> <dbl>        <dbl>  <dbl>    <dbl> #> 1        7  35.8     3   0.0000481   -4.32     4.32 #> 2       12 112.      3   0.00000156  -5.81     5.81 #> 3       13 NaN      -2 NaN          NaN      NaN    #> 4       14  39.0     3   0.0000371   -4.43     4.43 #> 5       19  15.4     3   0.000596    -3.23     3.23 #> 6       20  14.6     3   0.000696    -3.16     3.16 num_ions <- t %>%   filter(p <= 1) %>%   count() %>%   pull()  fc <- foldchanges %>%   left_join(t, by = \"Compound\") %>%   arrange(p) %>%   mutate(     qval = 1:(length(p)),     qval = p * num_ions / qval   ) %>%   arrange(desc(p))  min_qval <- 1  for (i in 1:nrow(fc)) {   if (!is.finite(fc$qval[i])) {     next   }    if (fc$qval[i] < min_qval) {     min_qval <- fc$qval[i]   } else {     fc$qval[i] <- min_qval   } }  fc2 <- fc %>%   mutate(neg_logq = -log10(qval))"},{"path":"http://www.schlosslab.org/mpactR/articles/downstream_analyses.html","id":"volcano-plot","dir":"Articles","previous_headings":"Fold change analysis","what":"Volcano plot","title":"Downstream Analyses","text":"Now can create volcano plot see magnitude metabolite abundance differences Cocoulture ANG18 groups. can plot log2 fold change values log10 p-values log10 q-values, calcuated t-tests . log2 fold change ~ log10 p-values base volcano plot scatter plot log2 fold changes x axis -log10 p-values y axis:  good, probably want know compounds p-value threshold outside log2 fold change threshold. Fold change threshold commonly ranges 1.5 - 2. plot, show p-value threshold 0.05 fold change threshold 1.5. First add add horizontal line denote cutoff -log10 0.05:  Now can add vertical lines showing positive negative cutoffs log2 fold change:  now can see thresholds, difficult make compounds significant fold change values. nice color compounds significance. Specifically, compounds whose intensity signigicantly higher experimental group, compounds whose intensity significantly lower experimental group, compounds significant p-values fold change fold change threshold, compounds whose fold change significant. can adding new variable dataset using variable color points. First, add new variable sig values Increased (fold change > 1.5 & pvalue < 0.05), Decreased (fold change < -1.5 & pvalue < 0.05), Inconclusive (fold change -1.5 - 1.5 & pvalue < 0.05), not_sig (pvalue > 0.05). Now can set color aestheic variable sig select custom colors scale_color_manual():  Finally, adjust axis text titles liking:  Use can also make plot interactive, showing compound id point: log2 fold change ~ log10 q-values can also look volcano plot q value control false discovery rate (FDR) using approch shown p values:","code":"fc2 %>%   ggplot() +   aes(x = logfc, y = neg_logp) +   geom_point() +   labs(x = \"log2 Fold Change\", y = \"-Log~10~ *P*\", color = \"Differential Abundance\") +   theme_bw() fc2 %>%   ggplot() +   aes(x = logfc, y = neg_logp) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   labs(x = \"log2 Fold Change\", y = \"-Log~10~ *P*\", color = \"Differential Abundance\") +   theme_bw() fc2 %>%   ggplot() +   aes(x = logfc, y = neg_logp) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   labs(x = \"log2 Fold Change\", y = \"-Log~10~ *P*\", color = \"Differential Abundance\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   theme_bw() fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc >= log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"), labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not sigificant\")     )   ) %>%   select(Compound, ANG18, Coculture, fc, logfc, p, sig) %>%   head() #> # A tibble: 6 × 7 #>   Compound ANG18 Coculture      fc  logfc     p sig            #>      <dbl> <dbl>     <dbl>   <dbl>  <dbl> <dbl> <fct>          #> 1      637 2174.     2022.   0.930 -0.105 0.458 Not sigificant #> 2      856  130.        0    0.01  -6.64  0.429 Not sigificant #> 3     1284    0       312. 100      6.64  0.429 Not sigificant #> 4     1127 5164.        0    0.01  -6.64  0.169 Not sigificant #> 5      667    0       619. 100      6.64  0.167 Not sigificant #> 6     1302    0      2900. 100      6.64  0.166 Not sigificant fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc >= log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"), labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not sigificant\")     )   ) %>%   ggplot() +   aes(x = logfc, y = neg_logp, color = sig) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ *P*\",     color = \"Differential Abundance\"   ) +   theme_bw() fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc >= log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"), labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not sigificant\")     )   ) %>%   ggplot() +   aes(x = logfc, y = neg_logp, color = sig) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ *P*\",     color = \"Differential Abundance\"   ) +   theme_bw() +   theme(     axis.title = element_markdown(size = 20),     axis.text = element_text(size = 15)   ) volcano <- fc2 %>%   mutate(     sig = case_when(       p > 0.05 ~ \"not_sig\",       p <= 0.05 & logfc >= log2(1.5) ~ \"Increased\",       p <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"), labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not sigificant\")     )   ) %>%   ggplot() +   aes(     x = logfc, y = neg_logp, color = sig,     text = paste0(\"Compound: \", Compound)   ) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ *P*\",     color = \"Differential Abundance\"   ) +   theme_bw() +   theme(     axis.title = element_markdown(size = 20),     axis.text = element_text(size = 15)   )  ggplotly(volcano) fc2 %>%   mutate(     sig = case_when(       qval > 0.05 ~ \"not_sig\",       qval <= 0.05 & logfc >= log2(1.5) ~ \"Increased\",       qval <= 0.05 & logfc < -log2(1.5) ~ \"Decreased\",       TRUE ~ \"Inconclusive\"     ),     sig = factor(sig,       levels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"not_sig\"), labels = c(\"Increased\", \"Decreased\", \"Inconclusive\", \"Not sigificant\")     )   ) %>%   ggplot() +   aes(x = logfc, y = neg_logq, color = sig) +   geom_point() +   geom_hline(yintercept = -log10(0.05), linetype = \"dashed\") +   geom_vline(xintercept = log2(1.5), linetype = \"dashed\") +   geom_vline(xintercept = -log2(1.5), linetype = \"dashed\") +   scale_color_manual(values = c(\"red\", \"blue\", \"grey\", \"black\")) +   labs(     x = \"log2 Fold Change\",     y = \"-Log~10~ q-value\",     color = \"Differential Abundance\"   ) +   theme_bw() +   theme(     axis.title = element_markdown(size = 20),     axis.text = element_text(size = 15)   )"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"load-data-into-r","dir":"Articles","previous_headings":"","what":"Load data into R","title":"filter","text":"mpactR requires 2 files imput: feature table metadata file. expected comma separated files (.csv). peak_table: peak table Progenesis format expected. export compatable peak table Progenesis, navigate Review Compounds tab File -> Export Compound Measurements. Select following properties: Compound, m/z, Retention time (min), Raw abundance click ok. metadata: table sample information. minimum following columns expected: Injection, Sample_Code, Biological_Group. Injection sample name expected match sample column names peak_table. Sample_Code id technical replicate groups. Biological Group id biological replicate groups. sample metadata can added, encouraged downstream analysis following filtering mpactR. import data R, use mpactR function import_data(), arguments: peak_table_file_path meta_data_file_path. Note - need use example() using files. package function allows access internal package data. simply want play around packge using example data, can run import_data function shown , otherwise, provide file paths files. create R6 class object, store peak table metadata. Calling new mpactr object print current peak table terminal:","code":"data <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" ) data #>       Compound       mz         rt 102623_UM1848B_JC1_69_1_5004 #>          <num>    <num>      <num>                        <num> #>    1:        1 256.0883  0.7748333                         0.00 #>    2:        2 484.2921  0.7756667                       546.56 #>    3:        3 445.2276  0.7786667                         0.00 #>    4:        4 354.1842  0.7786667                         0.00 #>    5:        5 353.1995  0.7816667                         0.00 #>   ---                                                           #> 1330:     1330 538.3182 11.4396667                         0.00 #> 1331:     1331 424.2710 11.4315000                         0.00 #> 1332:     1332 422.1770 11.4568333                     10655.27 #> 1333:     1333 422.1776 11.4528333                       923.77 #> 1334:     1334 538.3981 11.4811667                      1176.19 #>       102623_UM1846B_Media_67_1_5005 102623_UM1847B_JC28_68_1_5006 #>                                <num>                         <num> #>    1:                           0.00                       5358.26 #>    2:                       16389.28                          0.00 #>    3:                       22515.28                          0.00 #>    4:                        6086.35                          0.00 #>    5:                        5923.96                          0.00 #>   ---                                                              #> 1330:                           0.00                      21222.45 #> 1331:                           0.00                      39842.07 #> 1332:                        5737.01                      33477.91 #> 1333:                           0.00                       6012.07 #> 1334:                        1353.96                      14792.94 #>       102623_UM1850B_ANGDT_71_1_5007 102623_UM1849B_ANG18_70_1_5008 #>                                <num>                          <num> #>    1:                        4131.40                        3398.08 #>    2:                           0.00                           0.00 #>    3:                           0.00                        1641.70 #>    4:                           0.00                           0.00 #>    5:                           0.00                           0.00 #>   ---                                                               #> 1330:                        5798.99                           0.00 #> 1331:                           0.00                       40318.68 #> 1332:                       28487.39                       11222.92 #> 1333:                        4634.47                        1250.37 #> 1334:                        3151.34                        1590.32 #>       102623_UM1852B_Coculture_72_1_5009 102623_MixedMonoculture_84_1_5015 #>                                    <num>                             <num> #>    1:                            5464.43                           3299.94 #>    2:                               0.00                              0.00 #>    3:                               0.00                              0.00 #>    4:                               0.00                              0.00 #>    5:                               0.00                              0.00 #>   ---                                                                      #> 1330:                           30536.02                           7732.14 #> 1331:                           26284.99                              0.00 #> 1332:                           20043.54                          20653.87 #> 1333:                            1112.28                           2910.70 #> 1334:                            1190.15                           5869.06 #>       102623_UM1848B_JC1_69_1_5017 102623_UM1846B_Media_67_1_5018 #>                              <num>                          <num> #>    1:                         0.00                        2168.71 #>    2:                         0.00                       20194.55 #>    3:                         0.00                       19457.70 #>    4:                         0.00                        5966.08 #>    5:                         0.00                        5674.10 #>   ---                                                             #> 1330:                         0.00                           0.00 #> 1331:                         0.00                           0.00 #> 1332:                     13961.88                        9107.94 #> 1333:                      1364.87                           0.00 #> 1334:                      1404.99                        1636.15 #>       102623_UM1847B_JC28_68_1_5019 102623_UM1850B_ANGDT_71_1_5020 #>                               <num>                          <num> #>    1:                       5505.94                        3762.47 #>    2:                          0.00                           0.00 #>    3:                          0.00                           0.00 #>    4:                          0.00                           0.00 #>    5:                          0.00                           0.00 #>   ---                                                              #> 1330:                      17782.36                        7420.76 #> 1331:                      37742.99                           0.00 #> 1332:                      30362.90                       28691.15 #> 1333:                       5510.67                        4081.40 #> 1334:                      15933.62                        2995.29 #>       102623_UM1849B_ANG18_70_1_5021 102623_UM1852B_Coculture_72_1_5022 #>                                <num>                              <num> #>    1:                        3424.76                            4890.84 #>    2:                           0.00                               0.00 #>    3:                           0.00                               0.00 #>    4:                           0.00                               0.00 #>    5:                           0.00                               0.00 #>   ---                                                                   #> 1330:                           0.00                           28742.16 #> 1331:                           0.00                           27778.21 #> 1332:                       11211.29                           18412.55 #> 1333:                        1096.25                               0.00 #> 1334:                        1350.04                            1429.84 #>       102623_MixedMonoculture_84_1_5028 102623_UM1848B_JC1_69_1_5030 #>                                   <num>                        <num> #>    1:                           2870.98                         0.00 #>    2:                              0.00                         0.00 #>    3:                            651.95                         0.00 #>    4:                              0.00                         0.00 #>    5:                              0.00                         0.00 #>   ---                                                                #> 1330:                           7830.13                         0.00 #> 1331:                          39217.34                     40432.41 #> 1332:                          20650.23                     15504.38 #> 1333:                           1604.38                      1643.83 #> 1334:                           5398.81                       982.25 #>       102623_UM1846B_Media_67_1_5031 102623_UM1847B_JC28_68_1_5032 #>                                <num>                         <num> #>    1:                        2033.65                       5522.76 #>    2:                       18650.07                          0.00 #>    3:                       19542.19                          0.00 #>    4:                        6755.31                          0.00 #>    5:                        5971.36                          0.00 #>   ---                                                              #> 1330:                           0.00                      18990.44 #> 1331:                       40989.54                      36259.55 #> 1332:                        8683.32                      29340.12 #> 1333:                           0.00                       5323.67 #> 1334:                        1791.72                      16808.92 #>       102623_UM1850B_ANGDT_71_1_5033 102623_UM1849B_ANG18_70_1_5034 #>                                <num>                          <num> #>    1:                        3446.13                        3621.36 #>    2:                           0.00                           0.00 #>    3:                           0.00                           0.00 #>    4:                           0.00                           0.00 #>    5:                           0.00                           0.00 #>   ---                                                               #> 1330:                        8203.37                           0.00 #> 1331:                           0.00                       38269.77 #> 1332:                       27768.08                       11750.24 #> 1333:                        4578.46                        1073.26 #> 1334:                        3039.45                        1120.35 #>       102623_UM1852B_Coculture_72_1_5035 102623_MixedMonoculture_84_1_5041 #>                                    <num>                             <num> #>    1:                            5051.84                           3028.24 #>    2:                               0.00                            399.02 #>    3:                               0.00                            664.81 #>    4:                               0.00                              0.00 #>    5:                               0.00                              0.00 #>   ---                                                                      #> 1330:                           29868.13                           8723.55 #> 1331:                           22049.76                          38174.90 #> 1332:                           18710.25                          21920.51 #> 1333:                               0.00                           1213.00 #> 1334:                            1306.39                           5012.83 #>       102423_Blank_77_1_5095 102423_Blank_77_2_5096 102423_Blank_77_3_5097 #>                        <num>                  <num>                  <num> #>    1:                   0.00                      0                   0.00 #>    2:                   0.00                      0                   0.00 #>    3:                   0.00                      0                   0.00 #>    4:                   0.00                      0                   0.00 #>    5:                   0.00                      0                   0.00 #>   ---                                                                      #> 1330:                   0.00                      0                   0.00 #> 1331:               20155.81                      0               35516.44 #> 1332:                   0.00                      0                   0.00 #> 1333:                   0.00                      0                   0.00 #> 1334:                   0.00                      0                   0.00 #>           kmd #>         <num> #>    1: 0.08831 #>    2: 0.29214 #>    3: 0.22763 #>    4: 0.18421 #>    5: 0.19945 #>   ---         #> 1330: 0.31820 #> 1331: 0.27097 #> 1332: 0.17696 #> 1333: 0.17758 #> 1334: 0.39806"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"accessing-data-in-mpactr-object","dir":"Articles","previous_headings":"","what":"Accessing data in mpactr object","title":"filter","text":"can extract peak table metadata point get_raw_data(), get_peak_table() get_meta_data() functions. functions return data.table object corresponding information.","code":""},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"extract-peak-table","dir":"Articles","previous_headings":"Accessing data in mpactr object","what":"Extract peak table","title":"filter","text":"extract raw input peak table get_raw_data(): raw peak table change filters applied data. want extract filtered peak table, use get_peak_table():","code":"get_raw_data(data)[1:5, 1:8] #>    Compound       mz        rt 102623_UM1848B_JC1_69_1_5004 #>       <num>    <num>     <num>                        <num> #> 1:        1 256.0883 0.7748333                         0.00 #> 2:        2 484.2921 0.7756667                       546.56 #> 3:        3 445.2276 0.7786667                         0.00 #> 4:        4 354.1842 0.7786667                         0.00 #> 5:        5 353.1995 0.7816667                         0.00 #>    102623_UM1846B_Media_67_1_5005 102623_UM1847B_JC28_68_1_5006 #>                             <num>                         <num> #> 1:                           0.00                       5358.26 #> 2:                       16389.28                          0.00 #> 3:                       22515.28                          0.00 #> 4:                        6086.35                          0.00 #> 5:                        5923.96                          0.00 #>    102623_UM1850B_ANGDT_71_1_5007 102623_UM1849B_ANG18_70_1_5008 #>                             <num>                          <num> #> 1:                         4131.4                        3398.08 #> 2:                            0.0                           0.00 #> 3:                            0.0                        1641.70 #> 4:                            0.0                           0.00 #> 5:                            0.0                           0.00 get_peak_table(data)[1:5, 1:8] #>    Compound       mz        rt 102623_UM1848B_JC1_69_1_5004 #>       <num>    <num>     <num>                        <num> #> 1:        1 256.0883 0.7748333                         0.00 #> 2:        2 484.2921 0.7756667                       546.56 #> 3:        3 445.2276 0.7786667                         0.00 #> 4:        4 354.1842 0.7786667                         0.00 #> 5:        5 353.1995 0.7816667                         0.00 #>    102623_UM1846B_Media_67_1_5005 102623_UM1847B_JC28_68_1_5006 #>                             <num>                         <num> #> 1:                           0.00                       5358.26 #> 2:                       16389.28                          0.00 #> 3:                       22515.28                          0.00 #> 4:                        6086.35                          0.00 #> 5:                        5923.96                          0.00 #>    102623_UM1850B_ANGDT_71_1_5007 102623_UM1849B_ANG18_70_1_5008 #>                             <num>                          <num> #> 1:                         4131.4                        3398.08 #> 2:                            0.0                           0.00 #> 3:                            0.0                        1641.70 #> 4:                            0.0                           0.00 #> 5:                            0.0                           0.00"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"extract-metadata","dir":"Articles","previous_headings":"Accessing data in mpactr object","what":"Extract metadata","title":"filter","text":"","code":"get_meta_data(data)[1:5, ] #>                         Injection Sample_Code Biological_Group dilution #>                            <char>      <char>           <char>    <num> #> 1:   102623_UM1848B_JC1_69_1_5004     UM1848B              JC1        1 #> 2: 102623_UM1846B_Media_67_1_5005     UM1846B            Media        1 #> 3:  102623_UM1847B_JC28_68_1_5006     UM1847B             JC28        1 #> 4: 102623_UM1850B_ANGDT_71_1_5007     UM1850B            ANGDT        1 #> 5: 102623_UM1849B_ANG18_70_1_5008     UM1849B            ANG18        1"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"reference-semantics","dir":"Articles","previous_headings":"","what":"Reference semantics","title":"filter","text":"Note: mpactR built R6 class-system, meaning opperates reference semantics data updated -place. Compared shallow copy, data pointers copied, deep copy, entire data object copied memory, changes original data object, regardless assigned new object, result changes original data object. can see . raw data object 1303 ions feature table: Running filter_mispicked_ions filter, default setting copy_object = FALSE (operates reference semtanics) results 1233 ions feature table: Even though created object called data2_mispicked, original data2 object also updated now 1233 ions feature table: recommend using default copy_object = FALSE makes extremely fast memory-efficient way chain mpactR filters together (see Chaining filters together section); however, like run filters individually traditional R style objects, can set copy_object TRUE shown filter examples. interested groups similar ions flagged filter, can use get_similar_ions(). function returns data.table report main ion (ion retained post-merging) ions similar .","code":"data2 <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" )   get_peak_table(data2)[, 1:5] #>       Compound       mz         rt 102623_UM1848B_JC1_69_1_5004 #>          <num>    <num>      <num>                        <num> #>    1:        1 256.0883  0.7748333                         0.00 #>    2:        2 484.2921  0.7756667                       546.56 #>    3:        3 445.2276  0.7786667                         0.00 #>    4:        4 354.1842  0.7786667                         0.00 #>    5:        5 353.1995  0.7816667                         0.00 #>   ---                                                           #> 1330:     1330 538.3182 11.4396667                         0.00 #> 1331:     1331 424.2710 11.4315000                         0.00 #> 1332:     1332 422.1770 11.4568333                     10655.27 #> 1333:     1333 422.1776 11.4528333                       923.77 #> 1334:     1334 538.3981 11.4811667                      1176.19 #>       102623_UM1846B_Media_67_1_5005 #>                                <num> #>    1:                           0.00 #>    2:                       16389.28 #>    3:                       22515.28 #>    4:                        6086.35 #>    5:                        5923.96 #>   ---                                #> 1330:                           0.00 #> 1331:                           0.00 #> 1332:                        5737.01 #> 1333:                           0.00 #> 1334:                        1353.96 data2_mispicked <- filter_mispicked_ions(data2,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = FALSE ) #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain.  get_peak_table(data2_mispicked)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>       Compound       mz     kmd         rt 102423_Blank_77_1_5095 #>          <num>    <num>   <num>      <num>                  <num> #>    1:        1 256.0883 0.08831  0.7748333                   0.00 #>    2:        2 484.2921 0.29214  0.7756667                   0.00 #>    3:        3 445.2276 0.22763  0.7786667                   0.00 #>    4:        4 354.1842 0.18421  0.7786667                   0.00 #>    5:        5 353.1995 0.19945  0.7816667                   0.00 #>   ---                                                             #> 1257:     1329 438.1713 0.17133 11.4035000                   0.00 #> 1258:     1330 538.3182 0.31820 11.4396667               11893.41 #> 1259:     1331 424.2710 0.27097 11.4315000               20155.81 #> 1260:     1332 422.1770 0.17696 11.4568333                   0.00 #> 1261:     1334 538.3981 0.39806 11.4811667                   0.00 get_peak_table(data2)[, 1:5] #> Key: <Compound, mz, kmd, rt> #>       Compound       mz     kmd         rt 102423_Blank_77_1_5095 #>          <num>    <num>   <num>      <num>                  <num> #>    1:        1 256.0883 0.08831  0.7748333                   0.00 #>    2:        2 484.2921 0.29214  0.7756667                   0.00 #>    3:        3 445.2276 0.22763  0.7786667                   0.00 #>    4:        4 354.1842 0.18421  0.7786667                   0.00 #>    5:        5 353.1995 0.19945  0.7816667                   0.00 #>   ---                                                             #> 1257:     1329 438.1713 0.17133 11.4035000                   0.00 #> 1258:     1330 538.3182 0.31820 11.4396667               11893.41 #> 1259:     1331 424.2710 0.27097 11.4315000               20155.81 #> 1260:     1332 422.1770 0.17696 11.4568333                   0.00 #> 1261:     1334 538.3981 0.39806 11.4811667                   0.00"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"filter","text":"mpactR provides filters correct following issues observed preprocessing tandem MS/MS data: mispicked ions: isotopic patterns incorrectly split preprocessing. solvent blank impurities: features overrepresented specific group samples; example removal features present solvent blanks due carryover samples. non-reproducible ions: inconsistent technical replicates. insource ions: fragment ions created first ionization tandem MS/MS workflow.","code":""},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"mispicked-ions-filter","dir":"Articles","previous_headings":"Filtering","what":"Mispicked ions filter","title":"filter","text":"check mispicked ions, use mpactR function filter_mispicked_ions(). function takes mpactr object input, checks similar ions arguments ringwin, isowin, trwin max_iso_shift. Ions feature table flagged similar based retention time mass. Flagged ion groups suggested result incorrect splitting isotopic patterns peak picking, detector saturation artifacts, incorrect identification multiply charged oligomers. filter reports progress filtering, can see 1334ions present prior checking mispicked ions. 73 ions found similar another ion following merging, 1261 ions remain. can look ions found similar one another get_similar_ions() function.","code":"data_mispicked <- filter_mispicked_ions(data,   ringwin = 0.5,   isowin = 0.01, trwin = 0.005,   max_iso_shift = 3, merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = TRUE ) #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain. head(get_similar_ions(data_mispicked)) #>    main_ion similar_ions #>      <char>       <list> #> 1:     1188         1189 #> 2:      939          945 #> 3:      898          896 #> 4:     1214         1210 #> 5:     1253         1249 #> 6:      886          884"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"remove-ions-that-are-above-a-threhold-in-one-biological-sample-group","dir":"Articles","previous_headings":"Filtering","what":"Remove ions that are above a threhold in one biological sample group","title":"filter","text":"Removing solvent blank impurities important correcting -sample carryover contamination experimental samples. can identify remove ions mpactR’s filter_group() function. filter_group() identifies ions relative abundance threshold (group_threshold) specific group (group_to_remove). remove solvent blank impurities set group_to_remove Biological_Group metadata file corresponds solvent blank samples, “Solvent_Blank”. example, 1334 ions present prior group filter. 26 ions found relative abundance threshold 0.01 “Solvent_Blank” samples, leaving 1308 ions peak table.","code":"data_blank <- filter_group(data,   group_threshold = 0.01,   group_to_remove = \"Solvent_Blank\", remove_ions = TRUE,   copy_object = TRUE ) #> ℹ Parsing 1334 peaks based on the following sample group: Solvent_Blank. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Solvent_Blank. #> ✔ 26 ions failed the Solvent_Blank filter, 1308 ions remain."},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"remove-non-reproducible-ions","dir":"Articles","previous_headings":"Filtering","what":"Remove non-reproducible ions","title":"filter","text":"Ions whose abundance consisent technical replicates (.e., nonreproducible) may reliable analysis therefore removed feature table. Nonreproducible ions identified mean median coefficient variation (cv) filter_cv(). example dataset, 241 ions flagged nonreproducible. ions removed, leaving 1093 ions feature table. like visualize CV threshold performed dataset, can extract CV calculations using mpactR’s get_cv_data() function caclulate percentage features plotting. can look mean median cv shown example , can filter data parameter choice. nested data tibbles columns Compound, cv, index, index_scale: one tibble parameter (either mean median). also want calculate percentage features represented CV threshold. can plot percentage features CV:  can see roughly 80% features CV threshold meaning 20% removed CV theshold 0.2.","code":"data_rep <- filter_cv(data,   cv_threshold = 0.2, cv_param = \"median\",   copy_object = TRUE ) #> ℹ Parsing 1334 peaks for replicability across technical replicates. #> ✔ 241 ions failed the cv_filter filter, 1093 ions remain. cv <- get_cv_data(data_rep) %>%   pivot_longer(cols = c(\"mean_cv\", \"median_cv\"), names_to = \"param\", values_to = \"cv\") %>%   nest(.by = param) %>%   mutate(     data = map(data, arrange, cv),     data = map(data, mutate, index = 0:(length(cv) - 1)),     data = map(data, mutate, index_scale = index * 100 / length(cv))   )  head(cv) #> # A tibble: 2 × 2 #>   param     data                 #>   <chr>     <list>               #> 1 mean_cv   <tibble [1,334 × 4]> #> 2 median_cv <tibble [1,334 × 4]> #> # A tibble: 6 × 4 #>   Compound      cv index index_scale #>      <dbl>   <dbl> <int>       <dbl> #> 1      455 0.00500     0      0      #> 2      364 0.00720     1      0.0750 #> 3      409 0.00787     2      0.150  #> 4      435 0.00803     3      0.225  #> 5     1003 0.00887     4      0.300  #> 6     1117 0.0115      5      0.375 cv_thresh_percent <- cv %>%   filter(param == \"median_cv\") %>%   unnest(cols = data) %>%   mutate(diff_cv_thresh = abs(cv - 0.2)) %>%   slice_min(diff_cv_thresh, n = 1) %>%   pull(index_scale)  cv_thresh_percent #> [1] 81.85907 cv %>%   unnest(cols = data) %>%   mutate(param = factor(param, levels = c(\"mean_cv\", \"median_cv\"), labels = c(\"mean\", \"median\"))) %>%   ggplot() +   aes(x = cv, y = index_scale, group = param, color = param) +   geom_line(size = 2) +   geom_vline(xintercept = 0.2, color = \"darkgrey\", linetype = \"dashed\", size = 1) +   geom_hline(yintercept = cv_thresh_percent, color = \"darkgrey\", size = 1) +   labs(x = \"CV\", y = \"Percentage of Features\", param = \"Statistic\") +   theme_bw() +   theme(     axis.title = element_text(size = 20),     axis.text = element_text(size = 15),     legend.position = \"inside\",     legend.position.inside = c(.90, .08),     legend.title = element_blank(),     legend.text = element_text(size = 15)   )"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"remove-insouce-fragment-ions","dir":"Articles","previous_headings":"Filtering","what":"Remove insouce fragment ions","title":"filter","text":"ions produce fragments first ionization tandem MS/MS, called insouce ions. can result ions one compound represented feature table. like remove insource ions framgments, can mpactR’s filter_insource_ions(). filter_insource_ions() conducts ion decovolution via retention time correlation matrices within MS1 scans. Highly correlated ion groups determined cluster_threshold parameter filtered remvome low mass features. highest mass feature identified likely parent ion retained feature table. 72 ions identified removed deconvolution dataset, leaving 1262 ions feature table.","code":"data_insource <- filter_insource_ions(data,   cluster_threshold = 0.95,   copy_object = TRUE ) #> ℹ Parsing 1334 peaks for insource ions. #> ✔ 72 ions failed the insource filter, 1262 ions remain."},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"chaining-filters-together","dir":"Articles","previous_headings":"Filtering","what":"Chaining filters together","title":"filter","text":"Filters can chained customizable workflow, shown . filters can chained order, recommend filtering mispicked ions, solvent blanks, prior filtering nonrepoducible insouce ions. allow incorrectly picked peaks merged contamination/carryover removed prior identifying nonreproducible insource fragment ions. also demonstrate removal media blank components filter_group() function.","code":"data <- import_data(example(\"cultures_peak_table.csv\"),   example(\"cultures_metadata.csv\"),   format = \"Progenesis\" )  data_filtered <- filter_mispicked_ions(data, merge_method = \"sum\") |>   filter_group(group_to_remove = \"Solvent_Blank\") |>   filter_group(group_to_remove = \"Media\") |>   filter_cv(cv_threshold = 0.2, cv_param = \"median\") #> ℹ Checking 1334 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 73 ions failed the mispicked filter, 1261 ions remain. #> ℹ Parsing 1261 peaks based on the following sample group: Solvent_Blank. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Solvent_Blank. #> ✔ 25 ions failed the Solvent_Blank filter, 1236 ions remain. #> ℹ Parsing 1236 peaks based on the following sample group: Media. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Media. #> ✔ 751 ions failed the Media filter, 485 ions remain. #> ℹ Parsing 485 peaks for replicability across technical replicates. #> ✔ 62 ions failed the cv_filter filter, 423 ions remain."},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"filter","text":"mpactR offers mutliple ways view summary data filtering.","code":""},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"view-passing-and-failed-ions-for-a-single-filter","dir":"Articles","previous_headings":"Summary","what":"View passing and failed ions for a single filter","title":"filter","text":"interested viewing passing failing ions single filter, use filter_summary() function. must specify filter intested , either “mispicked”, “group”, “replicability”, “insouce”. Failed ions: Passing ions: set filter filter name apply data, warning message returned. want retrieve filter summary group filter, must also supply group name group argument: group must always supplied filter, even one group filter applied.","code":"mispicked_summary <- filter_summary(data_filtered, filter = \"mispicked\") mispicked_summary$failed_ions #>  [1] 1189  945  896 1210 1249  884 1060 1008 1304 1271 1326 1333  937 1250 1196 #> [16] 1014  895 1228  817  853 1122  938  743 1145 1021  946  161 1032 1033  282 #> [31]  154  779 1254 1224  260  264   18 1012  800 1251  901  969 1259 1223  528 #> [46] 1095  927 1242  410 1260  427 1157 1206  393 1252 1204  975  584 1282 1090 #> [61] 1257  507 1087 1153 1261  371  373  340 1267  546  495 1289 1290 head(mispicked_summary$passed_ions, 100) #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  19 #>  [19]  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37 #>  [37]  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55 #>  [55]  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73 #>  [73]  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91 #>  [91]  92  93  94  95  96  97  98  99 100 101 filter_summary(data_filtered, filter = \"insource\") #> Error in `mpactr_object$get_log()`: #> ! `filter` insource has not yet been applied to the data. Run the #>   corresponding filter function prior to extracting the summary. filter_summary(data_filtered, filter = \"group\", group = \"Solvent_Blank\") #> $failed_ions #>  [1]  684  697  698  709  713  714  717  720  725  730  731  735  736  737  740 #> [16]  747  750  752  754  755 1275 1324 1325 1330 1331 #>  #> $passed_ions #>    [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14 #>   [15]   15   16   17   19   20   21   22   23   24   25   26   27   28   29 #>   [29]   30   31   32   33   34   35   36   37   38   39   40   41   42   43 #>   [43]   44   45   46   47   48   49   50   51   52   53   54   55   56   57 #>   [57]   58   59   60   61   62   63   64   65   66   67   68   69   70   71 #>   [71]   72   73   74   75   76   77   78   79   80   81   82   83   84   85 #>   [85]   86   87   88   89   90   91   92   93   94   95   96   97   98   99 #>   [99]  100  101  102  103  104  105  106  107  108  109  110  111  112  113 #>  [113]  114  115  116  117  118  119  120  121  122  123  124  125  126  127 #>  [127]  128  129  130  131  132  133  134  135  136  137  138  139  140  141 #>  [141]  142  143  144  145  146  147  148  149  150  151  152  153  155  156 #>  [155]  157  158  159  160  162  163  164  165  166  167  168  169  170  171 #>  [169]  172  173  174  175  176  177  178  179  180  181  182  183  184  185 #>  [183]  186  187  188  189  190  191  192  193  194  195  196  197  198  199 #>  [197]  200  201  202  203  204  205  206  207  208  209  210  211  212  213 #>  [211]  214  215  216  217  218  219  220  221  222  223  224  225  226  227 #>  [225]  228  229  230  231  232  233  234  235  236  237  238  239  240  241 #>  [239]  242  243  244  245  246  247  248  249  250  251  252  253  254  255 #>  [253]  256  257  258  259  261  262  263  265  266  267  268  269  270  271 #>  [267]  272  273  274  275  276  277  278  279  280  281  283  284  285  286 #>  [281]  287  288  289  290  291  292  293  294  295  296  297  298  299  300 #>  [295]  301  302  303  304  305  306  307  308  309  310  311  312  313  314 #>  [309]  315  316  317  318  319  320  321  322  323  324  325  326  327  328 #>  [323]  329  330  331  332  333  334  335  336  337  338  339  341  342  343 #>  [337]  344  345  346  347  348  349  350  351  352  353  354  355  356  357 #>  [351]  358  359  360  361  362  363  364  365  366  367  368  369  370  372 #>  [365]  374  375  376  377  378  379  380  381  382  383  384  385  386  387 #>  [379]  388  389  390  391  392  394  395  396  397  398  399  400  401  402 #>  [393]  403  404  405  406  407  408  409  411  412  413  414  415  416  417 #>  [407]  418  419  420  421  422  423  424  425  426  428  429  430  431  432 #>  [421]  433  434  435  436  437  438  439  440  441  442  443  444  445  446 #>  [435]  447  448  449  450  451  452  453  454  455  456  457  458  459  460 #>  [449]  461  462  463  464  465  466  467  468  469  470  471  472  473  474 #>  [463]  475  476  477  478  479  480  481  482  483  484  485  486  487  488 #>  [477]  489  490  491  492  493  494  496  497  498  499  500  501  502  503 #>  [491]  504  505  506  508  509  510  511  512  513  514  515  516  517  518 #>  [505]  519  520  521  522  523  524  525  526  527  529  530  531  532  533 #>  [519]  534  535  536  537  538  539  540  541  542  543  544  545  547  548 #>  [533]  549  550  551  552  553  554  555  556  557  558  559  560  561  562 #>  [547]  563  564  565  566  567  568  569  570  571  572  573  574  575  576 #>  [561]  577  578  579  580  581  582  583  585  586  587  588  589  590  591 #>  [575]  592  593  594  595  596  597  598  599  600  601  602  603  604  605 #>  [589]  606  607  608  609  610  611  612  613  614  615  616  617  618  619 #>  [603]  620  621  622  623  624  625  626  627  628  629  630  631  632  633 #>  [617]  634  635  636  637  638  639  640  641  642  643  644  645  646  647 #>  [631]  648  649  650  651  652  653  654  655  656  657  658  659  660  661 #>  [645]  662  663  664  665  666  667  668  669  670  671  672  673  674  675 #>  [659]  676  677  678  679  680  681  682  683  685  686  687  688  689  690 #>  [673]  691  692  693  694  695  696  699  700  701  702  703  704  705  706 #>  [687]  707  708  710  711  712  715  716  718  719  721  722  723  724  726 #>  [701]  727  728  729  732  733  734  738  739  741  742  744  745  746  748 #>  [715]  749  751  753  756  757  758  759  760  761  762  763  764  765  766 #>  [729]  767  768  769  770  771  772  773  774  775  776  777  778  780  781 #>  [743]  782  783  784  785  786  787  788  789  790  791  792  793  794  795 #>  [757]  796  797  798  799  801  802  803  804  805  806  807  808  809  810 #>  [771]  811  812  813  814  815  816  818  819  820  821  822  823  824  825 #>  [785]  826  827  828  829  830  831  832  833  834  835  836  837  838  839 #>  [799]  840  841  842  843  844  845  846  847  848  849  850  851  852  854 #>  [813]  855  856  857  858  859  860  861  862  863  864  865  866  867  868 #>  [827]  869  870  871  872  873  874  875  876  877  878  879  880  881  882 #>  [841]  883  885  886  887  888  889  890  891  892  893  894  897  898  899 #>  [855]  900  902  903  904  905  906  907  908  909  910  911  912  913  914 #>  [869]  915  916  917  918  919  920  921  922  923  924  925  926  928  929 #>  [883]  930  931  932  933  934  935  936  939  940  941  942  943  944  947 #>  [897]  948  949  950  951  952  953  954  955  956  957  958  959  960  961 #>  [911]  962  963  964  965  966  967  968  970  971  972  973  974  976  977 #>  [925]  978  979  980  981  982  983  984  985  986  987  988  989  990  991 #>  [939]  992  993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 #>  [953] 1006 1007 1009 1010 1011 1013 1015 1016 1017 1018 1019 1020 1022 1023 #>  [967] 1024 1025 1026 1027 1028 1029 1030 1031 1034 1035 1036 1037 1038 1039 #>  [981] 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 #>  [995] 1054 1055 1056 1057 1058 1059 1061 1062 1063 1064 1065 1066 1067 1068 #> [1009] 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 #> [1023] 1083 1084 1085 1086 1088 1089 1091 1092 1093 1094 1096 1097 1098 1099 #> [1037] 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 #> [1051] 1114 1115 1116 1117 1118 1119 1120 1121 1123 1124 1125 1126 1127 1128 #> [1065] 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 #> [1079] 1143 1144 1146 1147 1148 1149 1150 1151 1152 1154 1155 1156 1158 1159 #> [1093] 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 #> [1107] 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 #> [1121] 1188 1190 1191 1192 1193 1194 1195 1197 1198 1199 1200 1201 1202 1203 #> [1135] 1205 1207 1208 1209 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 #> [1149] 1221 1222 1225 1226 1227 1229 1230 1231 1232 1233 1234 1235 1236 1237 #> [1163] 1238 1239 1240 1241 1243 1244 1245 1246 1247 1248 1253 1255 1256 1258 #> [1177] 1262 1263 1264 1265 1266 1268 1269 1270 1272 1273 1274 1276 1277 1278 #> [1191] 1279 1280 1281 1283 1284 1285 1286 1287 1288 1291 1292 1293 1294 1295 #> [1205] 1296 1297 1298 1299 1300 1301 1302 1303 1305 1306 1307 1308 1309 1310 #> [1219] 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1327 #> [1233] 1328 1329 1332 1334"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"view-passing-and-failed-ions-for-all-input-ions","dir":"Articles","previous_headings":"Summary","what":"View passing and failed ions for all input ions","title":"filter","text":"can view fate input ions qc_summary() function. data.table reporting compound id (compounds) failed passed filtering. ion failed filtering, status report name filter failed.","code":"head(qc_summary(data_filtered)[order(compounds), ]) #>         status compounds #>         <char>     <num> #> 1: group-Media         1 #> 2: group-Media         2 #> 3: group-Media         3 #> 4: group-Media         4 #> 5: group-Media         5 #> 6: group-Media         6"},{"path":"http://www.schlosslab.org/mpactR/articles/filter.html","id":"visualize-filtering-qc-with-tree-map-plot","dir":"Articles","previous_headings":"Summary","what":"Visualize filtering QC with tree map plot","title":"filter","text":"can visualize filtering efforts tree map using filtering summary obtained qc_summary() packages ggplot2 treemapify. First need determine number ions ion status summary table. can report count, however need calculate percent ions group. done code chunk , used data.table syntax qc_summary() returns data.table object. familar package data.table, check resources gitlab. Finally, plot treemap:  plot can customized ggplot2, example longer need legend maybe want custom colors:  want fast visualization treemap, can pass mpactr object function plot_qc_tree().","code":"library(ggplot2) library(treemapify)  ion_counts <- qc_summary(data_filtered)[, .(count = .N), by = status][   , percent := (count / sum(count) * 100) ] tm <- ggplot(ion_counts) +   aes(area = percent, fill = status) +   geom_treemap() +   geom_treemap_text(aes(     label = paste(status, paste0(round(percent, 2), \"%\"), sep = \"\\n\"),     fontface = c(\"bold\")   ))  tm tm +   scale_fill_brewer(palette = \"Greens\") +   theme(legend.position = \"none\") plot_qc_tree(data_filtered)"},{"path":"http://www.schlosslab.org/mpactR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allison Mason. Author. Gregory Johnson. Author. Patrick Schloss. Author, maintainer.","code":""},{"path":"http://www.schlosslab.org/mpactR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mason , Johnson G, Schloss P (2024). mpactR: Filters Correction Preprocessed MS Data. R package version 0.0.0.9000, http://www.schlosslab.org/mpactR/.","code":"@Manual{,   title = {mpactR: Filters for the Correction of Preprocessed MS Data},   author = {Allison Mason and Gregory Johnson and Patrick Schloss},   year = {2024},   note = {R package version 0.0.0.9000},   url = {http://www.schlosslab.org/mpactR/}, }"},{"path":[]},{"path":"http://www.schlosslab.org/mpactR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Filters for the Correction of Preprocessed MS Data","text":"mpactR collection filters purpose identifying high quality MS1 features correcting peak selection errors introduced pre-processing tandem mass spectrometry data. Filters package address following issues: filter_mispicked_ions(): removal mispicked peaks, isotopic patterns incorrectly split preprocessing. filter_group(): removal features overrepresented specific group samples; example removal features present solvent blanks due carryover samples. filter_cv(): removal non-reproducible features, inconsistent technical replicates. filter_insource_ions(): removal fragment ions created first ionization tandem MS/MS workflow. filters independent, meaning can used create project-specific workflow, can learn cite vignette.","code":""},{"path":"http://www.schlosslab.org/mpactR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Filters for the Correction of Preprocessed MS Data","text":"can install development version mpactR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"SchlossLab/mpactR\")"},{"path":"http://www.schlosslab.org/mpactR/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"Filters for the Correction of Preprocessed MS Data","text":"See articles get started.","code":""},{"path":"http://www.schlosslab.org/mpactR/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Filters for the Correction of Preprocessed MS Data","text":"encounter issue, please file issue GitHub. Please include minimal reproducible example issue.","code":""},{"path":"http://www.schlosslab.org/mpactR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Filters for the Correction of Preprocessed MS Data","text":"feature ’d like see included, please let us know! Pull requests welcome GitHub.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/CulturesData.html","id":null,"dir":"Reference","previous_headings":"","what":"LC-MS/MS sample data — CulturesData","title":"LC-MS/MS sample data — CulturesData","text":"mpactr R6 class object contining feature table associated sample metadata.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/CulturesData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LC-MS/MS sample data — CulturesData","text":"","code":"CulturesData"},{"path":[]},{"path":"http://www.schlosslab.org/mpactR/reference/CulturesData.html","id":"colculturedata","dir":"Reference","previous_headings":"","what":"ColcultureData","title":"LC-MS/MS sample data — CulturesData","text":"mpactr 2 attributes: peak_table feature table class data.table meta_data data.table associated sample metadata","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file paths for examples — example","title":"Get file paths for examples — example","text":"mpactr contains number example files inst\\extdata directory. function makes accessible shows file paths used function examples.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file paths for examples — example","text":"","code":"example(file = NULL)"},{"path":"http://www.schlosslab.org/mpactR/reference/example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file paths for examples — example","text":"file Name file. NULL, examples files listed.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file paths for examples — example","text":"","code":"example() #> [1] \"coculture_peak_table.csv\"           \"cultures_metaboscape_metadata.csv\"  #> [3] \"cultures_metaboscape_peaktable.csv\" \"cultures_metadata.csv\"              #> [5] \"cultures_peak_table.csv\"            \"ion_masses\"                         #> [7] \"metadata.csv\"                        example(\"metadata.csv\") #> [1] \"/home/runner/work/_temp/Library/mpactR/extdata/metadata.csv\""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Non-reproducible ions — filter_cv","title":"Filter Non-reproducible ions — filter_cv","text":"filter_cv() removes feature ions found non-reproducible technical inejction replicates. Replicability assessed via mean median coefficient variation (CV) technical replicates. , fitler expecting input dataset least two replicate injections per sample.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Non-reproducible ions — filter_cv","text":"","code":"filter_cv(mpactr_object, cv_threshold = NULL, cv_param, copy_object = FALSE)"},{"path":"http://www.schlosslab.org/mpactR/reference/filter_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Non-reproducible ions — filter_cv","text":"mpactr_object mpactr_object. See import_data(). cv_threshold Coefficient variation threshold. cv_param Coefficient variation (CV) use filtering. Options \"mean\" \"median\", corresponding mean median CV, respectively. copy_object boolean paramter allows users return copied object instead modifying object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Non-reproducible ions — filter_cv","text":"mpactr_object","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Non-reproducible ions — filter_cv","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_cv(data,                               cv_threshold = 0.01,                               cv_param = \"mean\") #> ℹ Parsing 1303 peaks for replicability across technical replicates. #> ✔ 1298 ions failed the cv_filter filter, 5 ions remain.  data_filter <- filter_cv(data,                               cv_threshold = 0.01,                               cv_param = \"median\") #> ℹ Parsing 5 peaks for replicability across technical replicates. #> ✔ 0 ions failed the cv_filter filter, 5 ions remain."},{"path":"http://www.schlosslab.org/mpactR/reference/filter_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Ions by Group — filter_group","title":"Filter Ions by Group — filter_group","text":"Filter Ions Group","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Ions by Group — filter_group","text":"","code":"filter_group(   mpactr_object,   group_threshold = 0.01,   group_to_remove,   remove_ions = TRUE,   copy_object = FALSE )"},{"path":"http://www.schlosslab.org/mpactR/reference/filter_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Ions by Group — filter_group","text":"mpactr_object mpactr_object. See import_data(). group_threshold Relative abundance threshold remove ions. Default = 0.01. group_to_remove Biological group name remove ions . remove_ions logical. TRUE failing ions removed peak table. Default = TRUE. copy_object boolean paramter allows users return copied object instead modifying object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Ions by Group — filter_group","text":"mpactr_object","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Ions by Group — filter_group","text":"filter_group() removes ions signigifanct presence defined group (typically solvent blanks). Significance determined relative ion abundance arcoss groups user-defined group_threshold. Filtering assessed function parameter group_threshold. defualt 0.01, meaning features present group_to_remove greater 1% removed.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Ions by Group — filter_group","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_group(data,                               group_threshold = 0.01,                               group_to_remove = \"Blanks\",                               remove_ions = TRUE) #> ℹ Parsing 1303 peaks based on the following sample group: Blanks. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Blanks. #> ✔ 796 ions failed the Blanks filter, 507 ions remain."},{"path":"http://www.schlosslab.org/mpactR/reference/filter_insource_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Insource ions — filter_insource_ions","title":"Filter Insource ions — filter_insource_ions","text":"filter_insource_ions() determines insource ion fragments deconvolution via hierarchical clustering. Highly correlated ions retention times identified removed.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_insource_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Insource ions — filter_insource_ions","text":"","code":"filter_insource_ions(   mpactr_object,   cluster_threshold = 0.95,   copy_object = FALSE )"},{"path":"http://www.schlosslab.org/mpactR/reference/filter_insource_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Insource ions — filter_insource_ions","text":"mpactr_object mpactr_object. See import_data(). cluster_threshold cluster threshold ion deconvolution. Default = 0.95. copy_object boolean paramter allows users return copied object instead modifying object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_insource_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Insource ions — filter_insource_ions","text":"mpactr_object","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_insource_ions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Insource ions — filter_insource_ions","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_insource_ions(data,                               cluster_threshold = 0.95) #> ℹ Parsing 1303 peaks for insource ions. #> ✔ 71 ions failed the insource filter, 1232 ions remain."},{"path":"http://www.schlosslab.org/mpactR/reference/filter_mispicked_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Mispicked ions filter — filter_mispicked_ions","title":"Mispicked ions filter — filter_mispicked_ions","text":"filter_mispicked_ions() identifies ions incorrectly split separate features preprocessing. filter checks feature table similar ions terms mass retention time. Peaks found similar merged single feature given merge_peaks TRUE.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_mispicked_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mispicked ions filter — filter_mispicked_ions","text":"","code":"filter_mispicked_ions(   mpactr_object,   ringwin = 0.5,   isowin = 0.01,   trwin = 0.005,   max_iso_shift = 3,   merge_peaks = TRUE,   merge_method = \"sum\",   copy_object = FALSE )"},{"path":"http://www.schlosslab.org/mpactR/reference/filter_mispicked_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mispicked ions filter — filter_mispicked_ions","text":"mpactr_object mpactr_object. See import_data(). ringwin Ringing mass window. Default = 0.5. isowin Isotopic mass window. Defualt = 0.01. trwin numeric denoting retention time threhold assessing ions merged. Defulat = 0.005. max_iso_shift numeric. Default = 3. merge_peaks logical determine peaks found belong ion merged feature table. merge_method merege_peaks TRUE, method similar peaks merged. Can one \"sum\". copy_object boolean paramter allows users return copied object instead modifying object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_mispicked_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mispicked ions filter — filter_mispicked_ions","text":"mpactr_object","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_mispicked_ions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mispicked ions filter — filter_mispicked_ions","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_mispicked_ions(data,                               ringwin = 0.5,                                isowin = 0.01,                               trwin = 0.005,                               max_iso_shift = 3,                               merge_peaks = TRUE,                                merge_method = \"sum\") #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain."},{"path":"http://www.schlosslab.org/mpactR/reference/filter_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the summary for a single mpactR filter. — filter_summary","title":"Return the summary for a single mpactR filter. — filter_summary","text":"filter_summary() wrapper function return summary single filter within given mpactr object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the summary for a single mpactR filter. — filter_summary","text":"","code":"filter_summary(mpactr_object, filter, group = NULL)"},{"path":"http://www.schlosslab.org/mpactR/reference/filter_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the summary for a single mpactR filter. — filter_summary","text":"mpactr_object mpactr object created calling import_data() function. filter name filter whose summary extracted. Must one : \"mispicked\", \"group\", \"replicability\", \"insource\". group filter = \"group\", name Biological_Group used filter.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the summary for a single mpactR filter. — filter_summary","text":"list reporting 1) compound ids compounds failed filter 2) compound ids compounds passed filter.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/filter_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the summary for a single mpactR filter. — filter_summary","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_mispicked_ions(data) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  mispicked_summary <- filter_summary(data_filter, filter = \"mispicked\") mispicked_summary #> $failed_ions #>  [1] 1189  945  896 1210 1249  884 1060 1008 1304 1271 1333  937 1196 1014  895 #> [16] 1228  817  853 1122  938 1145 1021  946  161 1032 1033  282  154  779 1254 #> [31] 1224  260  264   18 1012  800 1251  901  969 1259 1223  528 1095  927 1242 #> [46]  410 1260  427 1157 1206  393 1252 1204  975  584 1282 1090 1257  507 1087 #> [61] 1153 1261  371  373  340 1267  546  495 1289 1290 #>  #> $passed_ions #>    [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14 #>   [15]   15   16   17   19   20   21   22   23   24   25   26   27   28   29 #>   [29]   30   31   32   33   34   35   36   37   38   39   40   41   42   43 #>   [43]   44   45   46   47   48   49   50   51   52   53   54   55   56   57 #>   [57]   58   59   60   61   62   63   64   65   66   67   68   69   70   71 #>   [71]   72   73   74   75   76   77   78   79   80   81   82   83   84   85 #>   [85]   86   87   88   89   90   91   92   93   94   95   96   97   98   99 #>   [99]  100  101  102  103  104  105  106  107  108  109  110  111  112  113 #>  [113]  114  115  116  117  118  119  120  121  122  123  124  125  126  127 #>  [127]  128  129  130  131  132  133  134  135  136  137  138  139  140  141 #>  [141]  142  143  144  145  146  147  148  149  150  151  152  153  155  156 #>  [155]  157  158  159  160  162  163  164  165  166  167  168  169  170  171 #>  [169]  172  173  174  175  176  177  178  179  180  181  182  183  184  185 #>  [183]  186  187  188  189  190  191  192  193  194  195  196  197  198  199 #>  [197]  200  201  202  203  204  205  206  207  208  209  210  211  212  213 #>  [211]  214  215  216  217  218  219  220  221  222  223  224  225  226  227 #>  [225]  228  229  230  231  232  233  234  235  236  237  238  239  240  241 #>  [239]  242  243  244  245  246  247  248  249  250  251  252  253  254  255 #>  [253]  256  257  258  259  261  262  263  265  266  267  268  269  270  271 #>  [267]  272  273  274  275  276  277  278  279  280  281  283  284  285  286 #>  [281]  287  288  289  290  291  292  293  294  295  296  297  298  299  300 #>  [295]  301  302  303  304  305  306  307  308  309  310  311  312  313  314 #>  [309]  315  316  317  318  319  320  321  322  323  324  325  326  327  328 #>  [323]  329  330  331  332  333  334  335  336  337  338  339  341  342  343 #>  [337]  344  345  346  347  348  349  350  351  352  353  354  355  356  357 #>  [351]  358  359  360  361  362  363  364  365  366  367  368  369  370  372 #>  [365]  374  375  376  377  378  379  380  381  382  383  384  385  386  387 #>  [379]  388  389  390  391  392  394  395  396  397  398  399  400  401  402 #>  [393]  403  404  405  406  407  408  409  411  412  413  414  415  416  417 #>  [407]  418  419  420  421  422  423  424  425  426  428  429  430  431  432 #>  [421]  433  434  435  436  437  438  439  440  441  442  443  444  445  446 #>  [435]  447  448  449  450  451  452  453  454  455  456  457  458  459  460 #>  [449]  461  462  463  464  465  466  467  468  469  470  471  472  473  474 #>  [463]  475  476  477  478  479  480  481  482  483  484  485  486  487  488 #>  [477]  489  490  491  492  493  494  496  497  498  499  500  501  502  503 #>  [491]  504  505  506  508  509  510  511  512  513  514  515  516  517  518 #>  [505]  519  520  521  522  523  524  525  526  527  529  530  531  532  533 #>  [519]  534  535  536  537  538  539  540  541  542  543  544  545  547  548 #>  [533]  549  550  551  552  553  554  555  556  557  558  559  560  561  562 #>  [547]  563  564  565  566  567  568  569  570  571  572  573  574  575  576 #>  [561]  577  578  579  580  581  582  583  585  586  587  588  589  590  591 #>  [575]  592  593  594  595  596  597  598  599  600  601  602  603  604  605 #>  [589]  606  607  608  609  610  611  612  613  614  615  616  617  618  619 #>  [603]  620  621  622  623  624  625  626  627  628  629  630  631  632  633 #>  [617]  634  635  636  637  638  639  640  641  642  643  644  645  646  647 #>  [631]  648  649  650  651  652  653  655  656  657  658  659  660  661  662 #>  [645]  663  664  665  666  667  668  669  670  671  672  673  674  675  676 #>  [659]  677  678  679  680  681  682  683  685  686  687  688  689  690  691 #>  [673]  692  693  694  695  696  699  700  701  702  703  704  705  706  707 #>  [687]  708  710  711  712  715  716  718  719  721  722  723  724  726  727 #>  [701]  728  729  732  733  734  738  739  741  742  744  745  746  748  749 #>  [715]  751  753  758  759  760  761  762  763  764  765  766  767  768  769 #>  [729]  770  771  772  773  774  775  776  777  778  780  781  782  783  784 #>  [743]  785  786  787  788  789  790  791  792  793  794  795  796  797  798 #>  [757]  799  801  802  803  804  805  806  807  808  809  810  811  812  813 #>  [771]  814  815  816  818  819  820  821  822  823  824  825  826  827  828 #>  [785]  829  830  831  832  833  834  835  836  837  838  839  840  841  842 #>  [799]  843  844  845  846  847  848  849  850  851  852  854  855  856  857 #>  [813]  858  859  860  861  862  863  864  865  866  867  868  869  870  871 #>  [827]  872  873  874  875  876  877  878  879  880  881  882  883  885  886 #>  [841]  887  888  889  890  891  892  893  894  897  898  899  900  902  903 #>  [855]  904  905  906  907  908  909  910  911  912  913  914  915  916  917 #>  [869]  918  919  920  921  922  923  924  925  926  928  929  930  931  932 #>  [883]  933  934  935  936  939  940  941  942  943  944  947  948  949  950 #>  [897]  951  952  953  954  955  956  957  958  959  960  961  962  963  964 #>  [911]  965  966  967  968  970  971  972  973  974  976  977  978  979  980 #>  [925]  981  982  983  984  985  986  987  988  989  990  991  992  993  994 #>  [939]  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1009 #>  [953] 1010 1011 1013 1015 1016 1017 1018 1019 1020 1022 1023 1024 1025 1026 #>  [967] 1027 1028 1029 1030 1031 1034 1035 1036 1037 1038 1039 1040 1041 1042 #>  [981] 1043 1044 1045 1046 1047 1048 1050 1051 1052 1053 1054 1055 1056 1057 #>  [995] 1058 1059 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 #> [1009] 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 #> [1023] 1088 1089 1091 1092 1093 1094 1096 1097 1098 1099 1100 1101 1102 1103 #> [1037] 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 #> [1051] 1118 1119 1120 1121 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 #> [1065] 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1146 1147 #> [1079] 1148 1149 1150 1151 1152 1154 1155 1156 1158 1159 1160 1161 1162 1163 #> [1093] 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 #> [1107] 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1190 1191 1192 #> [1121] 1193 1194 1195 1197 1198 1199 1200 1201 1202 1203 1205 1207 1208 1209 #> [1135] 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1225 1226 #> [1149] 1227 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 #> [1163] 1243 1244 1245 1246 1247 1250 1253 1255 1256 1258 1262 1263 1264 1265 #> [1177] 1266 1268 1269 1270 1272 1273 1274 1276 1277 1278 1279 1280 1281 1283 #> [1191] 1284 1285 1286 1287 1288 1291 1292 1293 1294 1295 1296 1297 1298 1299 #> [1205] 1300 1301 1302 1303 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 #> [1219] 1315 1316 1317 1318 1319 1320 1321 1322 1323 1327 1328 1329 1330 1332 #> [1233] 1334 #>"},{"path":"http://www.schlosslab.org/mpactR/reference/get_cv_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CV values. — get_cv_data","title":"Get CV values. — get_cv_data","text":"get_cv_data() wrapper function return cv (coefficient variation) calculated filter_cv().","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_cv_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CV values. — get_cv_data","text":"","code":"get_cv_data(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_cv_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CV values. — get_cv_data","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_cv_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CV values. — get_cv_data","text":"data.table retporting mean median coefficient variation input ion.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_cv_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CV values. — get_cv_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_cv(data,                               cv_threshold = 0.01,                               cv_param = \"median\") #> ℹ Parsing 1303 peaks for replicability across technical replicates. #> ✔ 1298 ions failed the cv_filter filter, 5 ions remain.  cv <- get_cv_data(data_filter) head(cv) #>    Compound    mean_cv  median_cv #>       <num>      <num>      <num> #> 1:        1 0.21346035 0.05760617 #> 2:        2 0.91799997 0.91799997 #> 3:        3 0.90848851 0.90848851 #> 4:        4 0.06782583 0.06782583 #> 5:        5 0.02727037 0.02727037 #> 6:        6 0.09005716 0.09005716"},{"path":"http://www.schlosslab.org/mpactR/reference/get_group_averages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get groups averages. — get_group_averages","title":"Get groups averages. — get_group_averages","text":"get_group_averages() wrapper function return group averages filtered peak table.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_group_averages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get groups averages. — get_group_averages","text":"","code":"get_group_averages(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_group_averages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get groups averages. — get_group_averages","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_group_averages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get groups averages. — get_group_averages","text":"data.table retporting average relative standard deviation across biological groups techincal replicates within group.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_group_averages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get groups averages. — get_group_averages","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_group(data, group_to_remove = \"Blanks\") #> ℹ Parsing 1303 peaks based on the following sample group: Blanks. #> ℹ Argument remove_ions is: TRUE. Removing peaks from Blanks. #> ✔ 796 ions failed the Blanks filter, 507 ions remain.  group_averages <- get_group_averages(data_filter) head(group_averages) #>    Compound  Biological_Group   average    BiolRSD Bioln    techRSD techn #>       <num>            <char>     <num>      <num> <int>      <num> <num> #> 1:        7 ANG18 monoculture     0.000         NA     3         NA     3 #> 2:        7 ANGDT monoculture 44956.797 0.02541863     3 0.02541863     3 #> 3:        7            Blanks     0.000         NA     3         NA     3 #> 4:        7         Coculture 28075.237 0.04421270     3 0.04421270     3 #> 5:        7   JC1 monoculture     0.000         NA     3         NA     3 #> 6:        7  JC28 monoculture  9728.027 0.01996942     3 0.01996942     3"},{"path":"http://www.schlosslab.org/mpactR/reference/get_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the meta_data data.table from the mpactr object. — get_meta_data","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"get_meta_data() wrapper function return meta data object given mpactr object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"","code":"get_meta_data(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_meta_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"data.table","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_meta_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the meta_data data.table from the mpactr object. — get_meta_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  meta_data <- get_meta_data(data)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_peak_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the peak table data.table from the mpactr object. — get_peak_table","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"get_peak_table() wrapper function return peak table object given mpactr object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_peak_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"","code":"get_peak_table(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_peak_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_peak_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"data.table","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_peak_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the peak table data.table from the mpactr object. — get_peak_table","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  peak_table <- get_peak_table(data)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the input peak table from mpactr object. — get_raw_data","title":"Return the input peak table from mpactr object. — get_raw_data","text":"get_raw_data wrapper function return meta data object given mpactr object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the input peak table from mpactr object. — get_raw_data","text":"","code":"get_raw_data(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the input peak table from mpactr object. — get_raw_data","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the input peak table from mpactr object. — get_raw_data","text":"data.table","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the input peak table from mpactr object. — get_raw_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  raw_data <- get_raw_data(data)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_similar_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get similar ion groups. — get_similar_ions","title":"Get similar ion groups. — get_similar_ions","text":"get_similar_ions() wrapper function return similar ion groups determined filter_mispicked_ions().","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_similar_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get similar ion groups. — get_similar_ions","text":"","code":"get_similar_ions(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/get_similar_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get similar ion groups. — get_similar_ions","text":"mpactr_object mpactr object created calling import_data() function.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_similar_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get similar ion groups. — get_similar_ions","text":"data.table retporting main ion found similar filter_mispicked_ions().","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/get_similar_ions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get similar ion groups. — get_similar_ions","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_mispicked_ions(data) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  mispicked_ion_groups <- get_similar_ions(data_filter) mispicked_ion_groups #>     main_ion similar_ions #>       <char>       <list> #>  1:     1188         1189 #>  2:      939          945 #>  3:      898          896 #>  4:     1214         1210 #>  5:     1253         1249 #>  6:      886          884 #>  7:     1059         1060 #>  8:     1011         1008 #>  9:     1305         1304 #> 10:     1272         1271 #> 11:     1332         1333 #> 12:      944          937 #> 13:     1195         1196 #> 14:     1022         1014 #> 15:      897          895 #> 16:     1233         1228 #> 17:      811          817 #> 18:      851          853 #> 19:     1123         1122 #> 20:      951          938 #> 21:     1146         1145 #> 22:     1019         1021 #> 23:      941          946 #> 24:      878          161 #> 25:     1030    1032,1033 #> 26:     1009          282 #> 27:      153          154 #> 28:      785          779 #> 29:     1256         1254 #> 30:     1216         1224 #> 31:      259          260 #> 32:      263          264 #> 33:      770           18 #> 34:     1004         1012 #> 35:      784          800 #> 36:     1258         1251 #> 37:      903          901 #> 38:      248          969 #> 39:      586         1259 #> 40:     1222         1223 #> 41:      525          528 #> 42:     1103         1095 #> 43:      918          927 #> 44:     1243         1242 #> 45:      411          410 #> 46:     1264         1260 #> 47:      426     427,1157 #> 48:      529         1206 #> 49:      395          393 #> 50:     1247         1252 #> 51:     1203         1204 #> 52:      973          975 #> 53:      583          584 #> 54:     1281         1282 #> 55:     1091         1090 #> 56:     1262         1257 #> 57:      508          507 #> 58:     1089         1087 #> 59:     1155         1153 #> 60:     1263         1261 #> 61:      372      371,373 #> 62:      342          340 #> 63:     1266         1267 #> 64:      545          546 #> 65:      496          495 #> 66:     1288    1289,1290 #>     main_ion similar_ions"},{"path":"http://www.schlosslab.org/mpactR/reference/import_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data into an mpactr object. — import_data","title":"Import data into an mpactr object. — import_data","text":"import_data() takes two file paths, one pre-processed feature table one sample metadata. files .csv.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/import_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data into an mpactr object. — import_data","text":"","code":"import_data(peak_table, meta_data, format = \"none\")"},{"path":"http://www.schlosslab.org/mpactR/reference/import_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data into an mpactr object. — import_data","text":"peak_table file path feature table file. meta_data file path meta_data file data.frame. format expected exported type peak table, can one Progenesis, MzMine, Metaboscape, None.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/import_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data into an mpactr object. — import_data","text":"mpactr_object","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/import_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import data into an mpactr object. — import_data","text":"mpactR requires 2 files imput: feature table metadata file. expected comma separated files (.csv). peak_table: peak table Progenesis format expected. export compatable peak table Progenesis, navigate Review Compounds tab File -> Export Compound Measurements. Select following properties: Compound, m/z, Retention time (min), Raw abundance click ok. metadata: table sample information. minimum following columns expected: Injection, Sample_Code, Biological_Group. Injection sample name expected match sample column names peak_table. Sample_Code id technical replicate groups. Biological Group id biological replicate groups. sample metadata can added, encouraged downstream analysis following filtering mpactR.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/import_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data into an mpactr object. — import_data","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  meta_data <- read.csv(example(\"metadata.csv\")) data <- import_data(example(\"coculture_peak_table.csv\"),                     meta_data,                     format = \"Progenesis\")"},{"path":"http://www.schlosslab.org/mpactR/reference/mpactR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mpactR: Filters for the Correction of Preprocessed MS Data — mpactR-package","title":"mpactR: Filters for the Correction of Preprocessed MS Data — mpactR-package","text":"fast tool correction pre-processed tandem MS/MS features.","code":""},{"path":[]},{"path":"http://www.schlosslab.org/mpactR/reference/mpactR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mpactR: Filters for the Correction of Preprocessed MS Data — mpactR-package","text":"Maintainer: Patrick Schloss pschloss@umich.edu (ORCID) Authors: Allison Mason masonar@umich.edu (ORCID) Gregory Johnson grejoh@umich.edu","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/plot_qc_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Filtering Summary as Tree Map — plot_qc_tree","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"plot_qc_tree() visualizes filtering summary treemap. Ion staus (see qc_summary()) reported percentage pre-filtered ions.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/plot_qc_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"","code":"plot_qc_tree(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/plot_qc_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"mpactr_object mpactr_object","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/plot_qc_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"tree map plot class ggplot","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/plot_qc_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Filtering Summary as Tree Map — plot_qc_tree","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_mispicked_ions(data,                                      ringwin = 0.5,                                      isowin = 0.01,                                      trwin = 0.005,                                      max_iso_shift = 3,                                     merge_peaks = TRUE) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  plot_qc_tree(data_filter)"},{"path":"http://www.schlosslab.org/mpactR/reference/qc_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Fitering — qc_summary","title":"Summary of Fitering — qc_summary","text":"Parses mpactr object exracts summary applied filters. Specifically, fate input ion reported ion status. Status options : Passed, mispicked, group, replicability, insouce. status Passed ions returned ions passed applied filters therefore expected high quaility ions. Ions tagged group, mispicked, replicability, ionsource removed correspoding filter.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/qc_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Fitering — qc_summary","text":"","code":"qc_summary(mpactr_object)"},{"path":"http://www.schlosslab.org/mpactR/reference/qc_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Fitering — qc_summary","text":"mpactr_object mpactr_object.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/qc_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Fitering — qc_summary","text":"data.table reporting number high quality ions (\"Passed\") filter removed.","code":""},{"path":"http://www.schlosslab.org/mpactR/reference/qc_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Fitering — qc_summary","text":"","code":"data <- import_data(example(\"coculture_peak_table.csv\"),                     example(\"metadata.csv\"),                     format = \"Progenesis\")  data_filter <- filter_mispicked_ions(data,                                      ringwin = 0.5,                                      isowin = 0.01,                                      trwin = 0.005,                                      max_iso_shift = 3,                                     merge_peaks = TRUE) #> ℹ Checking 1303 peaks for mispicked peaks. #> ℹ Argument merge_peaks is: TRUE. Merging mispicked peaks with method sum. #> ✔ 70 ions failed the mispicked filter, 1233 ions remain.  summary <- qc_summary(data_filter) summary #>          status compounds #>          <char>     <num> #>    1:    Passed         1 #>    2:    Passed         2 #>    3:    Passed         3 #>    4:    Passed         4 #>    5:    Passed         5 #>   ---                     #> 1299: mispicked      1267 #> 1300: mispicked       546 #> 1301: mispicked       495 #> 1302: mispicked      1289 #> 1303: mispicked      1290"}]
